CREATE TABLE IF NOT EXISTS modules (
 module_code VARCHAR(15) PRIMARY KEY,
 module_name VARCHAR(100) NOT NULL,
 modular_credits FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
 student_id CHAR(8) PRIMARY KEY,
 name VARCHAR(50) NOT NULL,
 is_admin BOOLEAN NOT NULL,
 password VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS tutors (
 student_id CHAR(8) CHECK (student_id LIKE 'E%'),
 name VARCHAR(50) NOT NULL,
 module_code VARCHAR(15) NOT NULL,
 grade VARCHAR(2) NOT NULL,
 fee INT,
 unit_time VARCHAR(11),
 year CHAR(4) NOT NULL,
 PRIMARY KEY (student_id, module_code),
 FOREIGN KEY (module_code) REFERENCES modules(module_code) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
 FOREIGN KEY(student_id) REFERENCES users(student_id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
 ); 
 
CREATE TABLE IF NOT EXISTS tutees (
 student_id CHAR(8) PRIMARY KEY CHECK (student_id LIKE 'E%'),
 name VARCHAR(50) NOT NULL,
 major VARCHAR(30),
 FOREIGN KEY(student_id) REFERENCES users(student_id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
);

CREATE TABLE IF NOT EXISTS offers (
 module_code VARCHAR(15) NOT NULL,
 tutor_id CHAR(8) NOT NULL,
 tutee_id CHAR(8) NOT NULL,
 status VARCHAR(8) NOT NULL,
 fee INT,
 PRIMARY KEY (module_code, tutor_id, tutee_id),
 FOREIGN KEY (tutor_id) REFERENCES users(student_id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
 FOREIGN KEY (tutee_id) REFERENCES users(student_id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
 FOREIGN KEY (module_code) REFERENCES modules(module_code) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
);
